#include "TestGENIEHelper.fcl"

process_name: GenieHelper

services:
{
  # Load the service that manages root files for histograms.
  TFileService:          { fileName: "geniehelpertest.hist.root"
                           closeFileFast: false }
  RandomNumberGenerator: {} #ART native random number generator
  scheduler:             { wantTracer: true wantSummary: true }

  # using IFDH as a service, so it needs something here
  # we don't actually use this URI in this job
  IFDH: {
    IFDH_BASE_URI: "http://samweb.fnal.gov:8480/sam/nova/api"
  }

# newer versions of art want a definition of "scheduler" or one gets:
#       %MSG-s StdLibException:  Early 06-Dec-2018 15:32:04 CST JobSetup
#       Standard library exception caught in art
#       Any parameters prefaced with '#' are optional.
#       Unsupported parameters:
#        + wantTracer [ <file.fcl> ]
  scheduler: { }

## https://cdcvs.fnal.gov/redmine/projects/art/wiki/ART_available_services

# Always-present services; configuration optional.
#  #rwh# floating_point_control: { ... }

#  scheduler:  # options block in the old system
#  {
#    # see other parts of this page for the complete table or options and defaults
#    Rethrow: ['OtherArt','StdException','Unknown','BadAlloc',
#              'BadExceptionType','ProductNotFound','DictionaryNotFound',
#              'InsertFailure','Configuration','LogicError',
#              'UnimplementedFeature','InvalidReference','NullPointerError',
#              'NoProductSpecified','EventTimeout','DataCorruption',
#              'ScheduleExecutionFailure','EventProcessorFailure',
#              'FileInPathError','FileOpenError','FileReadError',
#              'FatalRootError','MismatchedInputFiles',
#              'ProductDoesNotSupportViews','ProductDoesNotSupportPtr',
#              'NotFound']
#    IgnoreCompletely: []
#    wantSummary: true
#    #rwh#    wantTracer: true #rwh# false
#    handleEmptyRuns: true
#    handleEmptySubRuns: true
#    #rwh#     enableSigInt: true
#    #rwh#     unloadRootSigHandler: false
#    #rwh#     resetRootErrHandler: true
#  }

}

# Start each new event with an empty event.
source:
{
  module_type: EmptyEvent
  firstRun:    1000001     # Run number to use for this file
  firstSubRun: 1           # Subrun number to use for this file
  firstEvent:  1           # number of first event in the file
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
   generator: @local::geniehelpertest_dune_dk2nu
### alternative tests
### change filenames below (at bottom of file)
#   generator: @local::geniehelpertest_nova_dk2nu
#   generator: @local::geniehelpertest_dune_atmos  # BARTOL
#   generator: @local::geniehelpertest_dune_atmos_honda_rotfd
#   generator: @local::geniehelpertest_func

 }

 filters:
 {
 }

 analyzers:
 {
 }

 #list the modules for this path, order matters
 simulate: [ generator ]
 stream1:  [ out1 ] #could have multiple paths

 #things that modify the art::Event, filters and producers go here
 trigger_paths: [ simulate ]

 #end_path are things that do not modify art::Event,
 #includes analyzers and output modules. all items here can be run simultaneously
 end_paths:     [ stream1 ]
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   #default file name, can override from command line with -o or --output
   fileName:    "geniehelpertest.artgenie.root"
   SelectEvents: [ simulate ]
 }
}

#services.TFileService.fileName:  "bartol_dune.hist.root"
#out1.fileName:                   "bartol_dune.artgenie.root"
#services.TFileService.fileName: "honda_dune_rotfd.hist.root"
#outputs.out1.fileName:          "honda_dune_rotfd.artgenie.root"
#services.TFileService.fileName: "test_func_ccqe.hist.root"
#outputs.out1.fileName:          "test_func_ccqe.artgenie.root"

# test for R-2_12_10
#physics.producers.generator.EventGeneratorList: "Default+CCMEC+NCMEC"
# test catching unsupported obsolete feature
#physics.producers.generator.Environment: [
#                                           "GEVGL", "Default+CCMEC+NCMEC",
#                                           "GSPLOAD", "SomeArbitraryFile",
#                                           "GPRODMODE", "yes"
#                                         ]
physics.producers.generator.GlobalTimeOffset:  500.
physics.producers.generator.SpillTimeConfig:  " evgb::EvtTimeFNALBeam  booster 
intensity [ +1 2.0 -2 3e0 ] global=1234"

#   NuMI nfilled 99 nperbatch 89 dtbucket 18.8313 dtbucket 18.1234  nosuchkey
#   	 sigma=2.5 fwhm -1.76625 global 123456 


# end-of-fcl
